# #Clerk Backend API
#
##The Clerk REST Backend API, meant to be accessed by backend servers.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2025-03-12`. For more information, please see [Clerk API Versions](https://clerk.com/docs/versioning/available-versions).  Please see https://clerk.com/docs for more information.
#
#The version of the OpenAPI document: 2025-03-12
#Contact: support@clerk.com
#Generated by: https://openapi-generator.tech
#Generator version: 7.12.0
#

require "uri"

module Clerk
  class PhoneNumbersApi
    property api_client : ApiClient

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create a phone number
    # Create a new phone number
    # @return [PhoneNumber]
    def create_phone_number(create_phone_number_request : CreatePhoneNumberRequest?)
      data, _status_code, _headers = create_phone_number_with_http_info(create_phone_number_request)
      data
    end

    # Create a phone number
    # Create a new phone number
    # @return [Array<(PhoneNumber, Integer, Hash)>] PhoneNumber data, response status code and response headers
    def create_phone_number_with_http_info(create_phone_number_request : CreatePhoneNumberRequest?)
      if @api_client.config.debugging
        Log.debug {"Calling API: PhoneNumbersApi.create_phone_number ..."}
      end
      # resource path
      local_var_path = "/phone_numbers"

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = create_phone_number_request.to_json

      # return_type
      return_type = "PhoneNumber"

      # auth_names
      auth_names = ["bearerAuth"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"PhoneNumbersApi.create_phone_number",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: PhoneNumbersApi#create_phone_number\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return PhoneNumber.from_json(data), status_code, headers
    end

    # Delete a phone number
    # Delete the phone number with the given ID
    # @param phone_number_id [String] The ID of the phone number to delete
    # @return [DeletedObject]
    def delete_phone_number(phone_number_id : String)
      data, _status_code, _headers = delete_phone_number_with_http_info(phone_number_id)
      data
    end

    # Delete a phone number
    # Delete the phone number with the given ID
    # @param phone_number_id [String] The ID of the phone number to delete
    # @return [Array<(DeletedObject, Integer, Hash)>] DeletedObject data, response status code and response headers
    def delete_phone_number_with_http_info(phone_number_id : String)
      if @api_client.config.debugging
        Log.debug {"Calling API: PhoneNumbersApi.delete_phone_number ..."}
      end
      # verify the required parameter "phone_number_id" is set
      if @api_client.config.client_side_validation && phone_number_id.nil?
        raise ArgumentError.new("Missing the required parameter 'phone_number_id' when calling PhoneNumbersApi.delete_phone_number")
      end
      # resource path
      local_var_path = "/phone_numbers/{phone_number_id}".sub("{" + "phone_number_id" + "}", URI.encode_path(phone_number_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "DeletedObject"

      # auth_names
      auth_names = ["bearerAuth"]

      data, status_code, headers = @api_client.call_api(:DELETE,
                                                        local_var_path,
                                                        :"PhoneNumbersApi.delete_phone_number",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: PhoneNumbersApi#delete_phone_number\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return DeletedObject.from_json(data), status_code, headers
    end

    # Retrieve a phone number
    # Returns the details of a phone number
    # @param phone_number_id [String] The ID of the phone number to retrieve
    # @return [PhoneNumber]
    def get_phone_number(phone_number_id : String)
      data, _status_code, _headers = get_phone_number_with_http_info(phone_number_id)
      data
    end

    # Retrieve a phone number
    # Returns the details of a phone number
    # @param phone_number_id [String] The ID of the phone number to retrieve
    # @return [Array<(PhoneNumber, Integer, Hash)>] PhoneNumber data, response status code and response headers
    def get_phone_number_with_http_info(phone_number_id : String)
      if @api_client.config.debugging
        Log.debug {"Calling API: PhoneNumbersApi.get_phone_number ..."}
      end
      # verify the required parameter "phone_number_id" is set
      if @api_client.config.client_side_validation && phone_number_id.nil?
        raise ArgumentError.new("Missing the required parameter 'phone_number_id' when calling PhoneNumbersApi.get_phone_number")
      end
      # resource path
      local_var_path = "/phone_numbers/{phone_number_id}".sub("{" + "phone_number_id" + "}", URI.encode_path(phone_number_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "PhoneNumber"

      # auth_names
      auth_names = ["bearerAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"PhoneNumbersApi.get_phone_number",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: PhoneNumbersApi#get_phone_number\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return PhoneNumber.from_json(data), status_code, headers
    end

    # Update a phone number
    # Updates a phone number
    # @param phone_number_id [String] The ID of the phone number to update
    # @return [PhoneNumber]
    def update_phone_number(phone_number_id : String, update_phone_number_request : UpdatePhoneNumberRequest?)
      data, _status_code, _headers = update_phone_number_with_http_info(phone_number_id, update_phone_number_request)
      data
    end

    # Update a phone number
    # Updates a phone number
    # @param phone_number_id [String] The ID of the phone number to update
    # @return [Array<(PhoneNumber, Integer, Hash)>] PhoneNumber data, response status code and response headers
    def update_phone_number_with_http_info(phone_number_id : String, update_phone_number_request : UpdatePhoneNumberRequest?)
      if @api_client.config.debugging
        Log.debug {"Calling API: PhoneNumbersApi.update_phone_number ..."}
      end
      # verify the required parameter "phone_number_id" is set
      if @api_client.config.client_side_validation && phone_number_id.nil?
        raise ArgumentError.new("Missing the required parameter 'phone_number_id' when calling PhoneNumbersApi.update_phone_number")
      end
      # resource path
      local_var_path = "/phone_numbers/{phone_number_id}".sub("{" + "phone_number_id" + "}", URI.encode_path(phone_number_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = update_phone_number_request.to_json

      # return_type
      return_type = "PhoneNumber"

      # auth_names
      auth_names = ["bearerAuth"]

      data, status_code, headers = @api_client.call_api(:PATCH,
                                                        local_var_path,
                                                        :"PhoneNumbersApi.update_phone_number",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: PhoneNumbersApi#update_phone_number\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return PhoneNumber.from_json(data), status_code, headers
    end
  end
end
