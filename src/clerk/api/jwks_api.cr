# #Clerk Backend API
#
##The Clerk REST Backend API, meant to be accessed by backend servers.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2025-03-12`. For more information, please see [Clerk API Versions](https://clerk.com/docs/versioning/available-versions).  Please see https://clerk.com/docs for more information.
#
#The version of the OpenAPI document: 2025-03-12
#Contact: support@clerk.com
#Generated by: https://openapi-generator.tech
#Generator version: 7.12.0
#

require "uri"

module Clerk
  class JWKSApi
    property api_client : ApiClient

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Retrieve the JSON Web Key Set of the instance
    # Retrieve the JSON Web Key Set of the instance
    # @return [JWKS]
    def get_jwks()
      data, _status_code, _headers = get_jwks_with_http_info()
      data
    end

    # Retrieve the JSON Web Key Set of the instance
    # Retrieve the JSON Web Key Set of the instance
    # @return [Array<(JWKS, Integer, Hash)>] JWKS data, response status code and response headers
    def get_jwks_with_http_info()
      if @api_client.config.debugging
        Log.debug {"Calling API: JWKSApi.get_jwks ..."}
      end
      # resource path
      local_var_path = "/jwks"

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "JWKS"

      # auth_names
      auth_names = ["bearerAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"JWKSApi.get_jwks",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: JWKSApi#get_jwks\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return JWKS.from_json(data), status_code, headers
    end
  end
end
