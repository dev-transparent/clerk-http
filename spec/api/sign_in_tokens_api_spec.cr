# #Clerk Backend API
#
##The Clerk REST Backend API, meant to be accessed by backend servers.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2025-03-12`. For more information, please see [Clerk API Versions](https://clerk.com/docs/versioning/available-versions).  Please see https://clerk.com/docs for more information.
#
#The version of the OpenAPI document: 2025-03-12
#Contact: support@clerk.com
#Generated by: https://openapi-generator.tech
#Generator version: 7.12.0
#

require "../spec_helper"
require "json"
require "time"

# Unit tests for Clerk::SignInTokensApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "SignInTokensApi" do
  describe "test an instance of SignInTokensApi" do
    it "should create an instance of SignInTokensApi" do
      api_instance = Clerk::SignInTokensApi.new
      # TODO expect(api_instance).to be_instance_of(Clerk::SignInTokensApi)
    end
  end

  # unit tests for create_sign_in_token
  # Create sign-in token
  # Creates a new sign-in token and associates it with the given user. By default, sign-in tokens expire in 30 days. You can optionally supply a different duration in seconds using the &#x60;expires_in_seconds&#x60; property.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateSignInTokenRequest] :create_sign_in_token_request 
  # @return [SignInToken]
  describe "create_sign_in_token test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for revoke_sign_in_token
  # Revoke the given sign-in token
  # Revokes a pending sign-in token
  # @param sign_in_token_id The ID of the sign-in token to be revoked
  # @param [Hash] opts the optional parameters
  # @return [SignInToken]
  describe "revoke_sign_in_token test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

end
