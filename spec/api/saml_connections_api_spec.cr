# #Clerk Backend API
#
##The Clerk REST Backend API, meant to be accessed by backend servers.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2025-03-12`. For more information, please see [Clerk API Versions](https://clerk.com/docs/versioning/available-versions).  Please see https://clerk.com/docs for more information.
#
#The version of the OpenAPI document: 2025-03-12
#Contact: support@clerk.com
#Generated by: https://openapi-generator.tech
#Generator version: 7.12.0
#

require "../spec_helper"
require "json"
require "time"

# Unit tests for Clerk::SAMLConnectionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "SAMLConnectionsApi" do
  describe "test an instance of SAMLConnectionsApi" do
    it "should create an instance of SAMLConnectionsApi" do
      api_instance = Clerk::SAMLConnectionsApi.new
      # TODO expect(api_instance).to be_instance_of(Clerk::SAMLConnectionsApi)
    end
  end

  # unit tests for create_saml_connection
  # Create a SAML Connection
  # Create a new SAML Connection.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateSAMLConnectionRequest] :create_saml_connection_request 
  # @return [SchemasSAMLConnection]
  describe "create_saml_connection test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for delete_saml_connection
  # Delete a SAML Connection
  # Deletes the SAML Connection whose ID matches the provided &#x60;id&#x60; in the path.
  # @param saml_connection_id The ID of the SAML Connection to delete
  # @param [Hash] opts the optional parameters
  # @return [DeletedObject]
  describe "delete_saml_connection test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_saml_connection
  # Retrieve a SAML Connection by ID
  # Fetches the SAML Connection whose ID matches the provided &#x60;saml_connection_id&#x60; in the path.
  # @param saml_connection_id The ID of the SAML Connection
  # @param [Hash] opts the optional parameters
  # @return [SchemasSAMLConnection]
  describe "get_saml_connection test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for list_saml_connections
  # Get a list of SAML Connections for an instance
  # Returns the list of SAML Connections for an instance. Results can be paginated using the optional &#x60;limit&#x60; and &#x60;offset&#x60; query parameters. The SAML Connections are ordered by descending creation date and the most recent will be returned first.
  # @param [Hash] opts the optional parameters
  # @option opts [Int32] :limit Applies a limit to the number of results returned. Can be used for paginating the results together with &#x60;offset&#x60;.
  # @option opts [Int32] :offset Skip the first &#x60;offset&#x60; results when paginating. Needs to be an integer greater or equal to zero. To be used in conjunction with &#x60;limit&#x60;.
  # @option opts [String] :query Returns SAML connections that have a name that matches the given query, via case-insensitive partial match.
  # @option opts [String] :order_by Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username. By prepending one of those values with + or -, we can choose to sort in ascending (ASC) or descending (DESC) order.
  # @option opts [Array(String)] :organization_id Returns SAML connections that have an associated organization ID to the given organizations. For each organization id, the &#x60;+&#x60; and &#x60;-&#x60; can be prepended to the id, which denote whether the respective organization should be included or excluded from the result set. Accepts up to 100 organization ids.
  # @return [SAMLConnections]
  describe "list_saml_connections test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for update_saml_connection
  # Update a SAML Connection
  # Updates the SAML Connection whose ID matches the provided &#x60;id&#x60; in the path.
  # @param saml_connection_id The ID of the SAML Connection to update
  # @param update_saml_connection_request 
  # @param [Hash] opts the optional parameters
  # @return [SchemasSAMLConnection]
  describe "update_saml_connection test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

end
