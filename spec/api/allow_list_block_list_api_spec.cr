# #Clerk Backend API
#
##The Clerk REST Backend API, meant to be accessed by backend servers.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2025-03-12`. For more information, please see [Clerk API Versions](https://clerk.com/docs/versioning/available-versions).  Please see https://clerk.com/docs for more information.
#
#The version of the OpenAPI document: 2025-03-12
#Contact: support@clerk.com
#Generated by: https://openapi-generator.tech
#Generator version: 7.12.0
#

require "../spec_helper"
require "json"
require "time"

# Unit tests for Clerk::AllowListBlockListApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "AllowListBlockListApi" do
  describe "test an instance of AllowListBlockListApi" do
    it "should create an instance of AllowListBlockListApi" do
      api_instance = Clerk::AllowListBlockListApi.new
      # TODO expect(api_instance).to be_instance_of(Clerk::AllowListBlockListApi)
    end
  end

  # unit tests for create_allowlist_identifier
  # Add identifier to the allow-list
  # Create an identifier allowed to sign up to an instance
  # @param [Hash] opts the optional parameters
  # @option opts [CreateAllowlistIdentifierRequest] :create_allowlist_identifier_request 
  # @return [AllowlistIdentifier]
  describe "create_allowlist_identifier test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for create_blocklist_identifier
  # Add identifier to the block-list
  # Create an identifier that is blocked from accessing an instance
  # @param [Hash] opts the optional parameters
  # @option opts [CreateBlocklistIdentifierRequest] :create_blocklist_identifier_request 
  # @return [BlocklistIdentifier]
  describe "create_blocklist_identifier test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for delete_allowlist_identifier
  # Delete identifier from allow-list
  # Delete an identifier from the instance allow-list
  # @param identifier_id The ID of the identifier to delete from the allow-list
  # @param [Hash] opts the optional parameters
  # @return [DeletedObject]
  describe "delete_allowlist_identifier test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for delete_blocklist_identifier
  # Delete identifier from block-list
  # Delete an identifier from the instance block-list
  # @param identifier_id The ID of the identifier to delete from the block-list
  # @param [Hash] opts the optional parameters
  # @return [DeletedObject]
  describe "delete_blocklist_identifier test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for list_allowlist_identifiers
  # List all identifiers on the allow-list
  # Get a list of all identifiers allowed to sign up to an instance
  # @param [Hash] opts the optional parameters
  # @option opts [Bool] :paginated Whether to paginate the results. If true, the results will be paginated. If false, the results will not be paginated.
  # @option opts [Int32] :limit Applies a limit to the number of results returned. Can be used for paginating the results together with &#x60;offset&#x60;.
  # @option opts [Int32] :offset Skip the first &#x60;offset&#x60; results when paginating. Needs to be an integer greater or equal to zero. To be used in conjunction with &#x60;limit&#x60;.
  # @return [Array(AllowlistIdentifier)]
  describe "list_allowlist_identifiers test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for list_blocklist_identifiers
  # List all identifiers on the block-list
  # Get a list of all identifiers which are not allowed to access an instance
  # @param [Hash] opts the optional parameters
  # @return [BlocklistIdentifiers]
  describe "list_blocklist_identifiers test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

end
