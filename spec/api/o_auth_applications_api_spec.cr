# #Clerk Backend API
#
##The Clerk REST Backend API, meant to be accessed by backend servers.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2025-03-12`. For more information, please see [Clerk API Versions](https://clerk.com/docs/versioning/available-versions).  Please see https://clerk.com/docs for more information.
#
#The version of the OpenAPI document: 2025-03-12
#Contact: support@clerk.com
#Generated by: https://openapi-generator.tech
#Generator version: 7.12.0
#

require "../spec_helper"
require "json"
require "time"

# Unit tests for Clerk::OAuthApplicationsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "OAuthApplicationsApi" do
  describe "test an instance of OAuthApplicationsApi" do
    it "should create an instance of OAuthApplicationsApi" do
      api_instance = Clerk::OAuthApplicationsApi.new
      # TODO expect(api_instance).to be_instance_of(Clerk::OAuthApplicationsApi)
    end
  end

  # unit tests for create_o_auth_application
  # Create an OAuth application
  # Creates a new OAuth application with the given name and callback URL for an instance. The callback URL must be a valid url. All URL schemes are allowed such as &#x60;http://&#x60;, &#x60;https://&#x60;, &#x60;myapp://&#x60;, etc...
  # @param [Hash] opts the optional parameters
  # @option opts [CreateOAuthApplicationRequest] :create_o_auth_application_request 
  # @return [OAuthApplicationWithSecret]
  describe "create_o_auth_application test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for delete_o_auth_application
  # Delete an OAuth application
  # Deletes the given OAuth application. This is not reversible.
  # @param oauth_application_id The ID of the OAuth application to delete
  # @param [Hash] opts the optional parameters
  # @return [DeletedObject]
  describe "delete_o_auth_application test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_o_auth_application
  # Retrieve an OAuth application by ID
  # Fetches the OAuth application whose ID matches the provided &#x60;id&#x60; in the path.
  # @param oauth_application_id The ID of the OAuth application
  # @param [Hash] opts the optional parameters
  # @return [OAuthApplication]
  describe "get_o_auth_application test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for list_o_auth_applications
  # Get a list of OAuth applications for an instance
  # This request returns the list of OAuth applications for an instance. Results can be paginated using the optional &#x60;limit&#x60; and &#x60;offset&#x60; query parameters. The OAuth applications are ordered by descending creation date. Most recent OAuth applications will be returned first.
  # @param [Hash] opts the optional parameters
  # @option opts [Int32] :limit Applies a limit to the number of results returned. Can be used for paginating the results together with &#x60;offset&#x60;.
  # @option opts [Int32] :offset Skip the first &#x60;offset&#x60; results when paginating. Needs to be an integer greater or equal to zero. To be used in conjunction with &#x60;limit&#x60;.
  # @return [OAuthApplications]
  describe "list_o_auth_applications test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for rotate_o_auth_application_secret
  # Rotate the client secret of the given OAuth application
  # Rotates the OAuth application&#39;s client secret. When the client secret is rotated, make sure to update it in authorized OAuth clients.
  # @param oauth_application_id The ID of the OAuth application for which to rotate the client secret
  # @param [Hash] opts the optional parameters
  # @return [OAuthApplicationWithSecret]
  describe "rotate_o_auth_application_secret test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for update_o_auth_application
  # Update an OAuth application
  # Updates an existing OAuth application
  # @param oauth_application_id The ID of the OAuth application to update
  # @param update_o_auth_application_request 
  # @param [Hash] opts the optional parameters
  # @return [OAuthApplication]
  describe "update_o_auth_application test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

end
