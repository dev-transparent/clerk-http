# #Clerk Backend API
#
##The Clerk REST Backend API, meant to be accessed by backend servers.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2025-03-12`. For more information, please see [Clerk API Versions](https://clerk.com/docs/versioning/available-versions).  Please see https://clerk.com/docs for more information.
#
#The version of the OpenAPI document: 2025-03-12
#Contact: support@clerk.com
#Generated by: https://openapi-generator.tech
#Generator version: 7.12.0
#

require "../spec_helper"
require "json"
require "time"

# Unit tests for Clerk::PhoneNumbersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "PhoneNumbersApi" do
  describe "test an instance of PhoneNumbersApi" do
    it "should create an instance of PhoneNumbersApi" do
      api_instance = Clerk::PhoneNumbersApi.new
      # TODO expect(api_instance).to be_instance_of(Clerk::PhoneNumbersApi)
    end
  end

  # unit tests for create_phone_number
  # Create a phone number
  # Create a new phone number
  # @param [Hash] opts the optional parameters
  # @option opts [CreatePhoneNumberRequest] :create_phone_number_request 
  # @return [PhoneNumber]
  describe "create_phone_number test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for delete_phone_number
  # Delete a phone number
  # Delete the phone number with the given ID
  # @param phone_number_id The ID of the phone number to delete
  # @param [Hash] opts the optional parameters
  # @return [DeletedObject]
  describe "delete_phone_number test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_phone_number
  # Retrieve a phone number
  # Returns the details of a phone number
  # @param phone_number_id The ID of the phone number to retrieve
  # @param [Hash] opts the optional parameters
  # @return [PhoneNumber]
  describe "get_phone_number test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for update_phone_number
  # Update a phone number
  # Updates a phone number
  # @param phone_number_id The ID of the phone number to update
  # @param [Hash] opts the optional parameters
  # @option opts [UpdatePhoneNumberRequest] :update_phone_number_request 
  # @return [PhoneNumber]
  describe "update_phone_number test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

end
