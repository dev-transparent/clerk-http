# #Clerk Backend API
#
##The Clerk REST Backend API, meant to be accessed by backend servers.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2025-03-12`. For more information, please see [Clerk API Versions](https://clerk.com/docs/versioning/available-versions).  Please see https://clerk.com/docs for more information.
#
#The version of the OpenAPI document: 2025-03-12
#Contact: support@clerk.com
#Generated by: https://openapi-generator.tech
#Generator version: 7.12.0
#

require "../spec_helper"
require "json"
require "time"

# Unit tests for Clerk::InstanceSettingsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "InstanceSettingsApi" do
  describe "test an instance of InstanceSettingsApi" do
    it "should create an instance of InstanceSettingsApi" do
      api_instance = Clerk::InstanceSettingsApi.new
      # TODO expect(api_instance).to be_instance_of(Clerk::InstanceSettingsApi)
    end
  end

  # unit tests for get_instance
  # Fetch the current instance
  # Fetches the current instance
  # @param [Hash] opts the optional parameters
  # @return [ModelInstance]
  describe "get_instance test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for update_instance
  # Update instance settings
  # Updates the settings of an instance
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateInstanceRequest] :update_instance_request 
  # @return [nil]
  describe "update_instance test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for update_instance_organization_settings
  # Update instance organization settings
  # Updates the organization settings of the instance
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateInstanceOrganizationSettingsRequest] :update_instance_organization_settings_request 
  # @return [OrganizationSettings]
  describe "update_instance_organization_settings test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for update_instance_restrictions
  # Update instance restrictions
  # Updates the restriction settings of an instance
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateInstanceRestrictionsRequest] :update_instance_restrictions_request 
  # @return [InstanceRestrictions]
  describe "update_instance_restrictions test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

end
